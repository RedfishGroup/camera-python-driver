2010. Feb. 08:
	Processing the conversions.h to the library. There are a couple useful
	things in here, which were missing so far. For example to use RGB
	displays, these can help converting any image buffers to RGB8 formats.
	I would suggest them implemented into the Image class.

	Adding new enums:
		bayer_method_t
		stereo_method_t
		
	Now all the files: dc1394/*.h are added. The special functions for the
	specific camera vendors and linux platform are skipped. Sometime they may
	come, but at the moment I think this much is enough for a start.

	All variable names are shortened by removing the dc1394 tag. If one wants,
	still can do:
	
	import _dc1394core as dc1394
	and use everything with dc1394.video_frame_t or similar.

	Shutter, converting to ms: this is only meaningful if the camera is
	absolute capable. Otherwise this is just a number, but the camera manual
	may provide some conversion to it. The multiplication would only
	complicate life in such a case.

	Added the "vendor" and "model" keys to the cameralist returned by the
	DC1394Library.enumerate_cameras(). The function opens each camera after
	enumeration and gets these values from the camere descriptor. This way the
	user may have a clue in advance which camera is which (when there is more
	than one).

2010 Feb. 10:
	Followed up the changes induced by the ones made in the core library. Now
	it seems the system runs, the camera can take shots, and the basic
	functionality did not change. For some reason I had some problems with the
	_dtype part of the Camera class. I added an inocent declaration to the
	__init__ function, and it runs fine.
	In FORMAT7 mode now the camera mode changes to (0,0, FORMAT7_...), because
	the real shape strongly depends on the ROI and the camera. Anyway the
	current program_format7_mode takes care of setting the shape parameter
	properly.

2010 Feb. 11:
    Dumping files: latter, may be implemented. The pgm format is easy to dump,
    and universal enough for most applications (8 and 16 bit gray scale ones).

2010 Feb. 12:
    Interesting NULL pointer access at the DC1394Library.enumerate_cameras,
    when accessing vendor or model informations. Now added a test that they
    should be used only when not NULL pointers.

    Also found some places where the new ..._codes dict can be used, and the
    for... taken over by a ..._codes.has_key() function.

    It is a bit weird why the trigger_source_vals... is trigger_source_0_vals.
    Now it is set to the simpler version: trigger_source_vals.
    
    Added trigger_polarity, trigger_source, trigger.pos_polarities,
    trigger.pos_sources.

    Interestingly, the trigger_get_polarity returns 1, which should be 704 or
    705. There must be something wrong.
        Some various resources, such as the help page of the dc1394 library
        itself states 0 and 1 as the values. The control.c of the dc1394
        library itself tests for True and False values only, and does not even
        use this enum. For now let us fall back to this in the _dc1394core
        until something else comes up.
    
    Added the software_trigger variable as well. Its possible values are True
    and False.

